{
  "intro": "# Quickstart Guide\n<details><summary><kbd>Background</kbd></summary>\n\n<br>\n\n**GenAI Evaluation Studio** is a multimodal tool for evaluating LLM performance using interactive, customizable layouts. The **GenAI Layout Builder** lets you design these layouts with JSON, CSS, and JavaScript, and preview them instantly with sample data. Key features include conditional fields, live validation, real-time preview, and a templates library to help you get started fast.\n</details>\n\n<details><summary><kbd>Layout Structure</kbd></summary>\n\n<br>\n\nLayouts are defined in JSON format with the following structure:\n-   Every layout is an array of JSONs\n-   Every JSON represents a section, and can have the following fields:\n    -   `title` (string): Optionally display title for the section\n    -   `hidden` (boolean): Optionally hide entire section\n    -   `layout` (object): Optionally change the layout from vertical to horizontal\n        -   `direction` (string, required): Use 'horizontal' to change to horizontal layout\n        -   `wrap` (boolean): Optionally disable components wrapping and use a horizontal scrollbar\n    -   `components` (object[], required): \n**Example:**\n```json\n[\n    {\n        'title': 'Section Title',\n        'hidden': true,\n        'layout': {\n            'direction': 'horizontal',\n            'wrap': false\n        },\n        'components': [\n            {\n                'type': 'text',\n                'key': 'nameInput1',\n                'title': 'Full Name',\n                'placeholder': 'Enter your name...',\n                'tooltip': 'Please also include your middle name',\n                'required': true,\n                'hidden': false\n            }\n        ]\n    }\n]\n```\n</details>\n\n <br>\n\n ## Components Liabrary\n",
  "Components-common-properties": "<details><summary><kbd>Common Properties</kbd></summary>\n\n<br>\n\nAll components support these base properties:\n-   `key` (string, required): Unique identifier for the field\n-   `type` (string, required): Component type identifier\n-   `title` (string): Display title for the field\n-   `tooltip` (string): Hover tooltip text\n-   `hidden` (boolean): Whether the component should be hidden\n-   `required` (boolean): Whether the field is required\n-   `allowStatus` (boolean): Whether users can report an issue or mark a field for review\n-   `hierarchy` (object): Conditional visibility rules\n    -   `condition` (string): DQL condition to evaluate\n</details>\n\n\n\n",
  "Components-title": "<details><summary><kbd>Title</kbd></summary>\n\n<br>\n\n-   Type: `title`\n-   Properties:\n    -   All common properties\n    -   `title` (string, required): Display title text\n\n*Example:*</details>\n\n",
  "Components-text": "<details><summary><kbd>Text Input</kbd></summary>\n\n<br>\n\n-   Type: `text`\n-   Properties:\n    -   All common properties\n    -   `placeholder` (string): Placeholder text\n    -   `disabled` (boolean): Whether the field is disabled\n    -   `errorMessage` (string): Error message to display\n    -   `numRows` (number): Optionally increase the number of rows displayed\n\n*Example:*</details>\n\n",
  "Components-select": "<details><summary><kbd>Single Selection - Dropdown</kbd></summary>\n\n<br>\n\n-   Type: `select`\n-   Properties:\n    -   All common properties\n    -   `options` (array, required): Array of options\n        -   `label` (string): Display text\n        -   `value` (any): Option value\n    -   `disabled` (boolean): Whether the field is disabled\n\n*Example:*</details>\n\n",
  "Components-raido": "<details><summary><kbd>Single Selection - Radio Buttons</kbd></summary>\n\n<br>\n\n \n-   Type: `radio`\n-   Properties:\n    -   All common properties\n    -   `options` (array, required): Array of options\n        -   `label` (string): Display text\n        -   `value` (any): Option value\n    -   `disabled` (boolean): Whether the field is disabled\n\n*Example:*</details>\n\n",
  "Components-checkboxes": "<details><summary><kbd>Multiple Selection - Checkboxes</kbd></summary>\n\n<br>\n\n\n-   Type: `checkbox`\n-   Properties:\n    -   All common properties\n    -   `options` (array, required): Array of options\n        -   `label` (string): Display text\n        -   `value` (any): Option value\n    -   `disabled` (boolean): Whether the field is disabled\n\n*Example:*</details>\n\n",
  "Components-slider": "<details><summary><kbd>Number Single Selection - Slider</kbd></summary>\n\n<br>\n\n\n-   Type: `slider`\n-   Properties:\n    -   All common properties\n    -   `min` (number): Minimum value\n    -   `max` (number): Maximum value\n    -   `default` (number): Default value\n    -   `step` (number): Step increment (minimum 0.01)\n    -   `disabled` (boolean): Whether the field is disabled\n\n*Example:*</details>\n\n",
  "Components-rating": "<details><summary><kbd>Number Single Selection - Star Rating</kbd></summary>\n\n<br>\n\n\n-   Type: `rating`\n-   Properties:\n    -   All common properties\n    -   `maxStars` (number): Maximum number of stars (default: 5; min 1, max 10)\n    -   `showValue` (boolean): Whether to show numeric value\n\n*Example:*</details>\n\n",
  "Components-image": "<details><summary><kbd>Image Viewer</kbd></summary>\n\n<br>\n\n\n-   Type: `image`\n-   Properties:\n    -   All common properties\n\n*Example:*</details>\n\n",
  "image": "https://upload.wikimedia.org/wikipedia/en/b/b9/MagrittePipe.jpg",
  "Components-audio": "<details><summary><kbd>Audio Viewer</kbd></summary>\n\n<br>\n\n\n-   Type: `audio`\n-   Properties:\n    -   All common properties\n\n*Example:*</details>\n\n",
  "audio": "https://cms-public-artifacts.artlist.io/content/music/aac/958142_Clair_du_Lune_-Debussy-_-_Master_v1_-_No_Bpm_-_020125__-_BOV_-_ORG_-_RMS_-_2444.aac",
  "Components-video": "<details><summary><kbd>Video Viewer</kbd></summary>\n\n<br>\n\n\n-   Type: `video`\n-   Properties:\n    -   All common properties\n\n*Example:*</details>\n\n",
  "video": "https://videos.pexels.com/video-files/856171/856171-hd_1920_1080_30fps.mp4",
  "Components-url": "<details><summary><kbd>URL Viewer</kbd></summary>\n\n<br>\n\n\n-   Type: `url`\n-   Properties:\n    -   All common properties\n    -   `initialWidth` (number): Initial iframe width\n    -   `initialHeight` (number): Initial iframe height\n\n*Example:*</details>\n\n",
  "url": "https://console.dataloop.ai/",
  "Components-markdown": "<details><summary><kbd>Markdown Viewer</kbd></summary>\n\n<br>\n\n\n-   Type: `markdown`\n-   Properties:\n    -   All common properties\n-   Insert the markdown text as the value of the markdown component key\n\n*This entire layout is an example*</details>\n\n",
  "Components-conversation": "<details><summary><kbd>Conversation</kbd></summary>\n\n<br>\n\n\n-   Type: `conversation`\n-   Properties:\n    -   All common properties\n-   Insert the conversation data as the value of the `convesation` component key, in the form of a JSON object[], and the following fields:\n    -   `role` (string): Use the word 'user' for the right bubble, or any other string for the left bubble title.\n    -    `content` (string): The bubble text.\n\n*Example:*</details>\n\n",
  "conversation": [
    {
      "role": "user",
      "content": "Hello!"
    },
    {
      "role": "assistant",
      "content": "Hi there! How can I help you today?"
    }
  ],
  "Components-condition": "<details><summary><kbd> Visibility Control</kbd></summary>\n\n<br>\n\n\nComponents and sections can be hidden in three ways:\n1. **Direct hiding**: Use the `hidden` property\n```json\n{\n    'type': 'text',\n    'key': 'hiddenField',\n    'hidden': true\n}\n```\n2. **Hierarchical fields**: Make visibility conditional on other field values\n```json\n{\n    'type': 'radio',\n    'key': 'parentField',\n    'title': 'Click to show',\n    'options': [\n      {\n        'label': 'Show',\n        'value': 'true'\n      }\n    ]\n},\n{\n    'type': 'image',\n    'key': 'childField',\n    'hierarchy': {\n        'condition': { 'parentField': { '$eq': 'true' } }\n    }\n}\n```\n*Example:*</details>\n\n",
  "childField": "https://media1.tenor.com/m/uXZQf0CcrSQAAAAd/tada-ta.gif",
  "Components-more-conditions": "<details><summary><kbd>More Conditions Examples</kbd></summary>\n\n<br>\n\n\n-   Show if riddle answer contains 'raven':\n```json\n{\n    'condition': { 'riddle_answer': { '$ilike': '*raven*' } }\n}\n```\n-   Use AND logic to show if tea party size is 42 and time is frozen:\n```json\n  'condition': {\n            '$and': [\n              {\n                'tea_party_size': {\n                  '$eq': '42'\n                }\n              },\n              {\n                'time_frozen': true\n              }\n            ]\n          }\n```\n-   Use OR logic to show if tea party size is 42 or time is frozen:\n```json\n{\n    'condition': {\n        '$or': [\n            {\n                'tea_party_size': {\n                    '$eq': '0'\n                }\n            },\n            {\n                'tea_party_size': {\n                    '$eq': 'infinity'\n                }\n            }\n        ]\n    }\n}\n```\n-   Use IN logic to show if tea party size is 0, 42 or infinity:\n```json\n{\n    'condition': {\n        'tea_types': {\n            '$in': ['earl_grey', 'darjeeling']\n        }\n    }\n}\n```\n-   Use EXISTS logic to show if tea party size is not 0:\n```json\n{\n    'condition': {\n        'riddle_answer': {\n            '$exists': true\n        }\n    }\n}\n```\n-   Advance exmaple:\n```json\n{\n    'condition': {\n        '$or': [\n            {\n                '$and': [\n                    {\n                        'tea_party_size': {\n                            '$eq': '6'\n                        }\n                    },\n                    {\n                        'time_frozen': true\n                    }\n                ]\n            },\n            {\n                '$and': [\n                    {\n                        'tea_types': {\n                            '$in': ['chamomile']\n                        }\n                    },\n                    {\n                        'riddle_answer': {\n                            '$exists': true\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n3. **Dynamic hiding**: Use JavaScript to control visibility\n```javascript\nmodule.exports = {\n    run: async function (formData, formLayout) {\n        // Hide field based on some condition\n        formLayout[0].components[0].hidden = someCondition;\n        return {\n            formData,\n            formLayout,\n        };\n    },\n};\n```\n</details>\n\n",
  "js-css": "<br>\n\n ## JavaScript and CSS for Dynamic Behavior\n<details><summary><kbd>JavaScript Module</kbd></summary>\n\n<br>\n\n\nAdd custom validation and dynamic behavior by providing a JavaScript module:\n```javascript\n// Define your 'run' function here\nfunction run (formData, formLayout) {\n    // This function will be called when form values change\n    // formData: the data that is set on the form\n    // formLayout: the layout of the form, you can change the layout to show error messages or other ui elements\n    // Set an error message on the component if the name is too long\n    if (formData.text2.length > 10) {\n        formLayout[0].components[30].errorMessage = `The name is too long, Max 10 characters. ${formData.text2.length}/10`;\n        window.dl.sendEvent({\n            name: 'app:toastMessage',\n            payload: {\n                'type': 'info', // info, error, warning, success\n                'message': 'The name is too long...'\n            },\n        });\n    }\n    else {\n        formLayout[0].components[30].errorMessage = ''\n    }\n    // Log the form data to the console\n    console.log('Consoling from the JS code');\n\n    // Return the form layout and data\n    return { formLayout, formData };\n}\n\n// Export the run function\nmodule.exports = {run};\n```\n</details>\n\n<details><summary><kbd>Custom CSS</kbd></summary>\n\n<br>\n\n\nAdd custom styling by providing CSS:\n```css\n.form-section {\n    /* Custom section styling */\n}\n\n.field-container {\n    /* Custom field styling */\n}\n\n.field-text2 {\n    width: 250px;\n}\n```\n*Try It:*</details>\n\n",
  "end": "---\n *Find more examples in our Template Library*."
}
